Line: 0 Column: 0 Type: Let Value: let
Line: 0 Column: 4 Type: IDENT Value: i
Line: 0 Column: 5 Type: COLON Value: ;
Line: 0 Column: 7 Type: IDENT Value: int
Line: 0 Column: 11 Type: ASSIGN Value: =
Line: 0 Column: 13 Type: UINT_LITERAL Value: 0
Line: 0 Column: 14 Type: SEMICOLON Value: ;
Line: 1 Column: 0 Type: Let Value: let
Line: 1 Column: 4 Type: IDENT Value: j
Line: 1 Column: 5 Type: COLON Value: ;
Line: 1 Column: 7 Type: IDENT Value: int
Line: 1 Column: 10 Type: SEMICOLON Value: ;
Line: 2 Column: 0 Type: Fn Value: fn
Line: 2 Column: 3 Type: IDENT Value: main
Line: 2 Column: 7 Type: L_PAREN Value: (
Line: 2 Column: 8 Type: R_PAREN Value: )
Line: 2 Column: 10 Type: ARROW Value: =
Line: 2 Column: 13 Type: IDENT Value: int
Line: 2 Column: 17 Type: L_BRACE Value: {
Line: 3 Column: 4 Type: Let Value: let
Line: 3 Column: 8 Type: IDENT Value: i
Line: 3 Column: 9 Type: COLON Value: ;
Line: 3 Column: 11 Type: IDENT Value: int
Line: 3 Column: 15 Type: ASSIGN Value: =
Line: 3 Column: 17 Type: UINT_LITERAL Value: 0
Line: 3 Column: 18 Type: SEMICOLON Value: ;
Line: 4 Column: 4 Type: Let Value: let
Line: 4 Column: 8 Type: IDENT Value: j
Line: 4 Column: 9 Type: COLON Value: ;
Line: 4 Column: 11 Type: IDENT Value: int
Line: 4 Column: 14 Type: SEMICOLON Value: ;
Line: 5 Column: 4 Type: IDENT Value: j
Line: 5 Column: 5 Type: ASSIGN Value: =
Line: 5 Column: 6 Type: IDENT Value: i
Line: 5 Column: 7 Type: SEMICOLON Value: ;
Line: 6 Column: 4 Type: Return Value: return
Line: 6 Column: 11 Type: UINT_LITERAL Value: 0
Line: 6 Column: 12 Type: SEMICOLON Value: ;
Line: 7 Column: 0 Type: R_BRACE Value: }
